# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------
import furo
import sphinx_rtd_theme
import recommonmark
from recommonmark.transform import AutoStructify
from recommonmark.parser import CommonMarkParser
# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))
# source_parsers = {
#     '.md': CommonMarkParser,
# }
# source_suffix = ['.rst', '.md']

# -- Project information -----------------------------------------------------

project = 'rlrobot-book'
copyright = '2023, Zeming CHEN'
author = 'Zeming CHEN'

# The full version, including alpha/beta/rc tags
release = 'v1.0.0'


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.napoleon',
    'sphinx.ext.mathjax',
    'recommonmark',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
#html_theme = "sphinx_rtd_theme"
html_theme = "furo"

html_static_path = ["_static"]

html_logo = "HKUSTGZ_logo.png"

html_css_files = [
    "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/fontawesome.min.css",
    "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/solid.min.css",
    "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/brands.min.css",
    "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/regular.min.css",
]

html_theme_options = {
    "sidebar_hide_name": True,
    "top_of_page_button": "edit",

    "light_logo": "MICS_logo.png",
    "dark_logo": "MICS_logo.png",

    # "announcement": "<em>Important</em> announcement!",

    # "light_css_variables": {
    #     "color-brand-primary": "#2b1216",
    #     "color-brand-content": "#ed556a",
    #     "color-admonition-background": "orange",

    # },

    "footer_icons": [
        {
            "name": "GitHub",
            "url": "https://github.com/BenjaminChen1024/rlrobot-book",
            "html": "",
            "class": "fa-brands fa-github fa-2x",
        },

        {
            "name": "thumbs-up",
            "url": "https://blog.csdn.net/jermy00?spm=1000.2115.3001.5343",
            "html": "",
            "class": "fa-regular fa-thumbs-up fa-2x",
        },
    ],

}

html_title = "üëãüèª RL Robot Book üòò"

html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']

master_doc = 'index'
def setup(app):
    app.add_config_value('recommonmark_config', {
            'url_resolver': lambda url: github_doc_root + url,
            'auto_toc_tree_section': 'Contents',
            }, True)
    app.add_transform(AutoStructify)

